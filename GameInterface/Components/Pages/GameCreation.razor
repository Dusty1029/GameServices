@inject IPlatformService PlatformService
@inject ICategoryService CategoryService
@inject IGameService GameService
@inject ISerieService SerieService
@inject ISnackbar Snackbar
@inject NavigationManager Navigation

<MudDialog>
    <DialogContent>
        <MudForm Model="_createGame" @ref="_form">
            <MudTextField Class="pa-2" @bind-Value="_createGame.Name" Immediate="true" Label="Nom" />
            <MudSelect Class="pa-2" @bind-Value="_createGame.Serie" Label="Série">
                @foreach (var serie in Series)
                {
                    <MudSelectItem Value="serie">@serie.Serie</MudSelectItem>
                }
            </MudSelect>
            <MudSelect Class="pa-2" @bind-Value="_createGame.Platform" Label="Platform">
                @foreach (var platform in Platforms)
                {
                    <MudSelectItem Value="platform">@platform.Name</MudSelectItem>
                }
            </MudSelect>
            <MudSelect Class="pa-2" @bind-SelectedValues="_createGame.Categories" Label="Categories" MultiSelection="true">
                @foreach (var category in Categories)
                {
                    <MudSelectItem Value="category">@category.Name</MudSelectItem>
                }
            </MudSelect>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Annuler</MudButton>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Submit">Créer</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter]
    private MudDialogInstance? MudDialog { get; set; }
    [Parameter]
    public List<PlatformDto> Platforms { get; set; } = [];
    [Parameter]
    public List<CategoryDto> Categories { get; set; } = [];
    [Parameter]
    public List<SimpleSerieDto> Series { get; set; } = [];

    private MudForm? _form;
    private CreateGameDto _createGame = new();

    private async Task CreateGame()
    {
        var createGameResult = await GameService.CreateGame(CancellationToken, _createGame);
        if (createGameResult.IsSucceed)
        {
            Snackbar.Add($"Le jeu {_createGame.Name} a bien été créé.", Severity.Success);
            Navigation.NavigateTo("/games");
        }
    }

    private void Submit() => MudDialog?.Close(DialogResult.Ok(_createGame));

    private void Cancel() => MudDialog?.Cancel();
}

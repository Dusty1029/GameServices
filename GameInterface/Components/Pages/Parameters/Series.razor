@page "/series"
@inject ISerieService SerieService
@inject ISnackbar Snackbar
@inject IDialogService DialogService

<ParameterElementsTableComponent Elements="Elements" 
    LoadElements="LoadSeries"
    DeleteElement="DeleteSerie"
    Title="@Title"
    AddElement="AddSerie">
</ParameterElementsTableComponent>

@code {
    private List<SimpleTableElement> Elements { get; set; } = [];
    private List<SimpleSerieDto> SerieDtos { get; set; } = [];
    private string Title { get; set; } = "Séries";

    private async Task LoadSeries()
    {
        var getSeriesResult = await SerieService.GetAllSeries(CancellationToken);
        if (getSeriesResult.IsSucceed)
        {
            SerieDtos = getSeriesResult.Result!;
            Elements = SerieDtos.Select(s => s.ToSimpleTableElement()).ToList();
        }
    }

    private async Task DeleteSerie(SimpleTableElement simpleElement)
    {
        var serie = FindSerie(simpleElement);
        var deleteSerieResult = await SerieService.DeleteSerie(CancellationToken, serie.Id);
        if (deleteSerieResult.IsSucceed)
        {
            Snackbar.Add($"La série {simpleElement.Name} a bien été supprimée.", Severity.Success);
            SerieDtos.Remove(serie);
        }
    }

    private async Task AddSerie()
    {
        var parameters = new DialogParameters<TextInputDialog>
        {
            { x => x.ContentText, $"Création d'une série" },
            { x => x.Label, "Série" }
        };
        var dialogOptions = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };
        var dialogReference = await DialogService.ShowAsync<TextInputDialog>("Création", parameters, dialogOptions);
        var response = await dialogReference.Result;

        if (!response!.Canceled)
        {
            var serie = (string)response.Data!;
            var createCategoryResult = await SerieService.CreateSerie(CancellationToken, new() { Serie = serie });
            if (createCategoryResult.IsSucceed)
            {
                Snackbar.Add($"La plateforme {serie} a bien été crée.", Severity.Success);
                await LoadSeries();
            }
        }
    }

    private SimpleSerieDto FindSerie(SimpleTableElement simpleTableElement) => SerieDtos.First(sg => sg.Id == simpleTableElement.Id);
}
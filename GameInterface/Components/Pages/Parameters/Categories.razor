@page "/categories"
@inject ICategoryService CategoryService
@inject ISnackbar Snackbar
@inject IDialogService DialogService

<ParameterElementsTableComponent Elements="Elements" 
    LoadElements="LoadCategories"
    DeleteElement="DeleteCategory"
    Title="@Title"
    AddElement="AddCategory">
</ParameterElementsTableComponent>

@code {
    private List<SimpleTableElement> Elements { get; set; } = [];
    private List<CategoryDto> CategoryDtos { get; set; } = [];
    private string Title { get; set; } = "Catégories";

    private async Task LoadCategories()
    {
        var getCategoriesResult = await CategoryService.GetAllCategories(CancellationToken);
        if (getCategoriesResult.IsSucceed)
        {
            CategoryDtos = getCategoriesResult.Result!;
            Elements = CategoryDtos.Select(c => c.ToSimpleTableElement()).ToList();
        }
    }

    private async Task DeleteCategory(SimpleTableElement simpleElement)
    {
        var category = FindCategory(simpleElement);
        var deleteCategoryResult = await CategoryService.DeleteCategory(CancellationToken, category.Id);
        if (deleteCategoryResult.IsSucceed)
        {
            Snackbar.Add($"La catégorie {simpleElement.Name} a bien été supprimée.", Severity.Success);
            CategoryDtos.Remove(category);
        }
    }

    private async Task AddCategory()
    {
        var parameters = new DialogParameters<TextInputDialog>
        {
            { x => x.ContentText, $"Création d'une catégorie" },
            { x => x.Label, "Catégorie" }
        };
        var dialogOptions = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };
        var dialogReference = await DialogService.ShowAsync<TextInputDialog>("Création", parameters, dialogOptions);
        var response = await dialogReference.Result;

        if (!response!.Canceled)
        {
            var category = (string)response.Data!;
            var createCategoryResult = await CategoryService.CreateCategory(CancellationToken, category);
            if (createCategoryResult.IsSucceed)
            {
                Snackbar.Add($"La catégorie {category} a bien été crée.", Severity.Success);
                await LoadCategories();
            }
        }
    }

    private CategoryDto FindCategory(SimpleTableElement simpleTableElement) => CategoryDtos.First(sg => sg.Id == simpleTableElement.Id);
}
